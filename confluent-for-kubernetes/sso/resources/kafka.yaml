apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  dataVolumeCapacity: 100Gi
  image:
    application: confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
  tls:
    autoGeneratedCerts: true
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  mountedVolumes:
    volumes:
      - name: customtruststore
        secret:
          secretName: mycustomtruststore
    volumeMounts:
      - name: customtruststore
        mountPath: /mnt/jvmtruststore
  configOverrides:
    log4j:
       - log4j.rootLogger=INFO, stdout
       #- log4j.logger.io.confluent.oidc=DEBUG
    #jvm:
    #  - "-Djavax.net.ssl.trustStore=/mnt/jvmtruststore/truststore.jks"
    #  - "-Djavax.net.ssl.trustStorePassword=foobar"
    server:
      - confluent.metadata.server.ssl.truststore.location=/mnt/jvmtruststore/truststore.jks
      - confluent.metadata.server.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - confluent.metadata.server.ssl.endpoint.identification.algorithm=https
  podTemplate:
    resources:
      requests:
        memory: 9Gi
  replicas: 3
  image:
    application: confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  dataVolumeCapacity: 100Gi
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
  authorization:
    type: rbac
    superUsers:
      - User:kafka
  services:
    mds:
      tls:
        enabled: true
      tokenKeyPair:
        secretRef: mds-token
      provider:
        type: ldap
        ldap:
          address: ldap://ldap.confluent.svc.cluster.local:389
          authentication:
            type: simple
            simple:
              secretRef: credential
          tls:
            enabled: true
          configurations:
            groupNameAttribute: cn
            groupObjectClass: group
            groupMemberAttribute: member
            groupMemberAttributePattern: CN=(.*),DC=test,DC=com
            groupSearchBase: dc=test,dc=com
            groupSearchScope: 1
            userNameAttribute: cn
            userMemberOfAttributePattern: CN=(.*),DC=test,DC=com
            userObjectClass: organizationalRole
            userSearchBase: dc=test,dc=com
            userSearchScope: 1
        oidc:
          clientCredentials:
            secretRef: credential2
          configurations:
            groupsClaimName: groups
            subClaimName: sub
            issuer: https://login.microsoftonline.com/0893715b-959b-4906-a185-2789e1ead045/v2.0
            jwksEndpointUri: https://login.microsoftonline.com/0893715b-959b-4906-a185-2789e1ead045/discovery/v2.0/keys
            authorizeBaseEndpointUri: https://login.microsoftonline.com/0893715b-959b-4906-a185-2789e1ead045/oauth2/v2.0/authorize
            tokenBaseEndpointUri: https://login.microsoftonline.com/0893715b-959b-4906-a185-2789e1ead045/oauth2/v2.0/token
            refreshToken: false
  dependencies:
    kafkaRest:
      authentication:
        type: bearer
        bearer:
          secretRef: mds-client
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: plain
          jaasConfig:
            secretRef: credential
      clusterRef:
        name: kraftcontroller
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    authentication:
      type: bearer
      bearer:
        secretRef: rest-credential